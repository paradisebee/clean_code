%% main script
addpath 'helper_function'

[I, M, G, rgbI] = openfile('DRIVE', 'test');
% [I, M, G, rgbI] = openfile('STARE', 'labels-vk');
% for i = 1:size(I,3)
%     im = I(:,:,i);
%     imshow(im,[])
%     pause;
% end
%% set parameters for line detection 
thres = 0.65; sigma = 0; max_L = 15; 
w = 15;
n = 1;
tic
percentage = []; threshold = [];
result0 = zeros(size(I));
result1 = result0;
for i = 1:size(I,3)
    % get current instance
    im = I(:,:,i); cmask = M(:,:,i); vmask = G(:,:,i);
    %% preprocessing
    [img, img_raw, pmask] = vessel_preproc(im, cmask);
    img = imtophat(1-img,strel('disk',12));
    
    [tx, ty, gmag_norm] = get_tangent(img);
    [tx_new, ty_new, tmag_new] = ETF(tx,ty,gmag_norm,img);
    [tx_new, ty_new, tmag_new] = ETF(tx_new,ty_new,gmag_norm,img);
%     [R_combined, R_theta, rmask] = detect_lines_ETF(tx,ty, pmask, cmask, w, max_L, thres, sigma);
    [R_combined, R_theta, rmask] = detect_lines(img, pmask, cmask, w, max_L, thres, sigma);
%     [R_combined, R_theta, rmask] = detect_lines_2D(img, pmask, cmask, w, max_L, thres, 3);

    
    [I_edge, I_edge_blur] = edge_detection(img, pmask);
    I_edge = Norm(I_edge); I_edge_blur = Norm(I_edge_blur);
%     rge = [332,359,285,309];
%     roi = img(rge(1):rge(2),rge(3):rge(4));
%     roi_d = I_edge(rge(1):rge(2),rge(3):rge(4));
%     roi_db = I_edge_blur(rge(1):rge(2),rge(3):rge(4));
%     roi_rm = rmask(rge(1):rge(2),rge(3):rge(4));
%     roi_pm = pmask(rge(1):rge(2),rge(3):rge(4));
%     roi_lr = R_combined(rge(1):rge(2),rge(3):rge(4));
%     roi_gt = vmask(rge(1):rge(2),rge(3):rge(4));
%     gmask = gc_patch(roi_lr,roi_d,roi_rm,roi_pm);
% %     gmask = graph_cut(R_combined,I_edge_blur,rmask,pmask);
%     line_func = @detect_lines;
%     etf_func = @etf_plus_fdog;
    win_sz = 50; ovl = round(win_sz/2);
    if mod(ovl, 2), ovl = ovl-1; end
% %     tic
    gc_func = @gc_patch;
    rmask2 = patch_oper(R_combined, I_edge, pmask, cmask, win_sz, ovl, gc_func);
%     rmask = etf_plus_fdog(img,pmask,cmask);
%     toc
    

% % ****** poisson integration **********
%     ret = [380,258,64,74];
%     tx = 380; ty = 258; ww = 64; hh = 74;
%     MASK = zeros(size(img));
%     sroi = im(ret(2):ret(2)+ret(4)-1, ret(1):ret(1)+ret(3)-1);
%     MASK(ret(2):ret(2)+ret(4)-1, ret(1):ret(1)+ret(3)-1) = sroi>0.6;
%     MASK = zeros(size(img));
%     MASK(im>0.6) = 1;
%     if sum(MASK(:)==1) == 0
%         continue;
%     end
%     se = strel('disk',1);
%     MASK1 = imdilate(imdilate(imdilate(MASK,se),se),se);
%     tx = 2;ty = 2;ww = size(im,2)-2;hh = size(im,1)-2;
%     cc = bwconncomp(MASK);
%     H =fspecial('laplacian',0);
%     LAP = imfilter(im,H,'same');
%     DEST = 255.*im;
%     OIM = 255.*im;
% %     for ic = 1:cc.NumObjects
% %         mask = zeros(size(MASK));
% %         if length(cc.PixelIdxList{ic})<5
% %             continue;
% %         end
% %         mask(cc.PixelIdxList{ic}) = 1;
%     oim = poissonImageIntegration(LAP, DEST, MASK1, tx, ty, ww, hh);
%     oim(1,1) = 255;
%     oim = Norm(oim);
%     figure
%     imshow(oim,[]);
% % ************************************************
%         pause;
%         OIM(cc.PixelIdxList{ic}) = oim(cc.PixelIdxList{ic});
%     end
%     figure
%     imshow(OIM,[])
    
    rmask3 = post_processing(R_combined, rmask2, pmask);
%     %% evaluation
    [Acc0(n), Sp0(n), Se0(n), MCC0(n)] = evaluation(vmask, rmask, cmask);
%     [Acc1(n), Sp1(n), Se1(n), MCC1(n)] = evaluation(vmask, gmask, cmask);
    [Acc2(n), Sp2(n), Se2(n), MCC2(n)] = evaluation(vmask, rmask2, cmask);
    [Acc3(n), Sp3(n), Se3(n), MCC3(n)] = evaluation(vmask, rmask3, cmask);
    n = n+1
    toc
    result0(:,:,i) = rmask;
    
    result1(:,:,i) = rmask3;
end

